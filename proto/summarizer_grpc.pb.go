// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: proto/summarizer.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SummarizerService_Summarize_FullMethodName           = "/summarizer.SummarizerService/Summarize"
	SummarizerService_SummarizeMatrixRoom_FullMethodName = "/summarizer.SummarizerService/SummarizeMatrixRoom"
)

// SummarizerServiceClient is the client API for SummarizerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Service for message summarization
type SummarizerServiceClient interface {
	// Main method for summarizing prepared messages
	Summarize(ctx context.Context, in *SummarizeRequest, opts ...grpc.CallOption) (*SummarizeResponse, error)
	// New method for summarizing Matrix room by credentials
	SummarizeMatrixRoom(ctx context.Context, in *SummarizeMatrixRoomRequest, opts ...grpc.CallOption) (*SummarizeMatrixRoomResponse, error)
}

type summarizerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSummarizerServiceClient(cc grpc.ClientConnInterface) SummarizerServiceClient {
	return &summarizerServiceClient{cc}
}

func (c *summarizerServiceClient) Summarize(ctx context.Context, in *SummarizeRequest, opts ...grpc.CallOption) (*SummarizeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SummarizeResponse)
	err := c.cc.Invoke(ctx, SummarizerService_Summarize_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *summarizerServiceClient) SummarizeMatrixRoom(ctx context.Context, in *SummarizeMatrixRoomRequest, opts ...grpc.CallOption) (*SummarizeMatrixRoomResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SummarizeMatrixRoomResponse)
	err := c.cc.Invoke(ctx, SummarizerService_SummarizeMatrixRoom_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SummarizerServiceServer is the server API for SummarizerService service.
// All implementations must embed UnimplementedSummarizerServiceServer
// for forward compatibility.
//
// Service for message summarization
type SummarizerServiceServer interface {
	// Main method for summarizing prepared messages
	Summarize(context.Context, *SummarizeRequest) (*SummarizeResponse, error)
	// New method for summarizing Matrix room by credentials
	SummarizeMatrixRoom(context.Context, *SummarizeMatrixRoomRequest) (*SummarizeMatrixRoomResponse, error)
	mustEmbedUnimplementedSummarizerServiceServer()
}

// UnimplementedSummarizerServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSummarizerServiceServer struct{}

func (UnimplementedSummarizerServiceServer) Summarize(context.Context, *SummarizeRequest) (*SummarizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Summarize not implemented")
}
func (UnimplementedSummarizerServiceServer) SummarizeMatrixRoom(context.Context, *SummarizeMatrixRoomRequest) (*SummarizeMatrixRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SummarizeMatrixRoom not implemented")
}
func (UnimplementedSummarizerServiceServer) mustEmbedUnimplementedSummarizerServiceServer() {}
func (UnimplementedSummarizerServiceServer) testEmbeddedByValue()                           {}

// UnsafeSummarizerServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SummarizerServiceServer will
// result in compilation errors.
type UnsafeSummarizerServiceServer interface {
	mustEmbedUnimplementedSummarizerServiceServer()
}

func RegisterSummarizerServiceServer(s grpc.ServiceRegistrar, srv SummarizerServiceServer) {
	// If the following call pancis, it indicates UnimplementedSummarizerServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SummarizerService_ServiceDesc, srv)
}

func _SummarizerService_Summarize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SummarizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummarizerServiceServer).Summarize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SummarizerService_Summarize_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummarizerServiceServer).Summarize(ctx, req.(*SummarizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SummarizerService_SummarizeMatrixRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SummarizeMatrixRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummarizerServiceServer).SummarizeMatrixRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SummarizerService_SummarizeMatrixRoom_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummarizerServiceServer).SummarizeMatrixRoom(ctx, req.(*SummarizeMatrixRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SummarizerService_ServiceDesc is the grpc.ServiceDesc for SummarizerService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SummarizerService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "summarizer.SummarizerService",
	HandlerType: (*SummarizerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Summarize",
			Handler:    _SummarizerService_Summarize_Handler,
		},
		{
			MethodName: "SummarizeMatrixRoom",
			Handler:    _SummarizerService_SummarizeMatrixRoom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/summarizer.proto",
}
